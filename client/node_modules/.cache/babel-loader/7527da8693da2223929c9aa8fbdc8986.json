{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manuel Rocha\\\\Documents\\\\Coding C\\\\expense-tracker-react\\\\client\\\\src\\\\context\\\\GlobalState.jsx\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer'; //initial state\n\nconst initialState = {\n  transactions: [// { id: 1, text: 'Flower', amount: -20 },\n    // { id: 2, text: 'Salary', amount: 300 },\n    // { id: 3, text: 'Book', amount: -10 },\n    // { id: 4, text: 'Camera', amount: 150 },\n  ]\n};\n\nasync function updateInitialState() {\n  try {\n    console.log('calling');\n    const result = await transactions();\n    initialState.transactions = result[0];\n    console.log(result[0]);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nupdateInitialState(); //Create context\n\nexport const GlobalContext = createContext(initialState); //Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Action\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Manuel Rocha/Documents/Coding C/expense-tracker-react/client/src/context/GlobalState.jsx"],"names":["React","createContext","useReducer","AppReducer","initialState","transactions","updateInitialState","console","log","result","error","GlobalContext","GlobalProvider","children","state","dispatch","deleteTransaction","id","type","payload","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,CACZ;AACA;AACA;AACA;AAJY;AADK,CAArB;;AASA,eAAeC,kBAAf,GAAoC;AAClC,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMC,MAAM,GAAG,MAAMJ,YAAY,EAAjC;AAEAD,IAAAA,YAAY,CAACC,YAAb,GAA4BI,MAAM,CAAC,CAAD,CAAlC;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAAC,CAAD,CAAlB;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF;;AACDJ,kBAAkB,G,CAElB;;AACA,OAAO,MAAMK,aAAa,GAAGV,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMQ,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC,CAD8C,CAG9C;;AACA,WAASY,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID;;AAED,WAASG,cAAT,CAAwBC,WAAxB,EAAqC;AACnCN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;;AAED,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLhB,MAAAA,YAAY,EAAES,KAAK,CAACT,YADf;AAELW,MAAAA,iBAFK;AAGLI,MAAAA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGP,QAPH,CADF;AAWD,CA7BM","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//initial state\r\nconst initialState = {\r\n  transactions: [\r\n    // { id: 1, text: 'Flower', amount: -20 },\r\n    // { id: 2, text: 'Salary', amount: 300 },\r\n    // { id: 3, text: 'Book', amount: -10 },\r\n    // { id: 4, text: 'Camera', amount: 150 },\r\n  ],\r\n};\r\n\r\nasync function updateInitialState() {\r\n  try {\r\n    console.log('calling');\r\n    const result = await transactions();\r\n\r\n    initialState.transactions = result[0];\r\n\r\n    console.log(result[0]);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nupdateInitialState();\r\n\r\n//Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Action\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}